@page "/counter"
@attribute [Authorize]
@using securityH5.Data.Models
@using securityH5.Data.Services
@using System.Security.Claims
@inject UserInfoService userInfoService
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Private information</PageTitle>

<AuthorizeView>
    <Authorized>

        <h2>Add Private information</h2>
        <hr />

        <form>
            <div class="row">
                <div class="col-md-8">
                    <div class="form-group">
                        <label for="Name" class="control-label">Title</label>
                        <input form="Name" class="form-control" @bind="@obj.Title" />
                    </div>
                    <div class="form-group">
                        <label for="Designation" class="control-label">Message</label>
                        <input form="Designation" class="form-control" @bind="@obj.Message" />
                    </div>

                    <div class="form-group">
                        <label for="Designation" class="control-label"></label>
                    </div>

                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <input type="button" class="btn btn-primary" @onclick="@CreateUserInfo" value="Save" />
                        <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
                    </div>
                </div>
            </div>
        </form>

        @code {



            UserInfo obj = new UserInfo();


            protected async void CreateUserInfo()
            {
                var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
                var user = authenticationState.User;
                var userName = user.FindFirst(ClaimTypes.Hash)?.Value;

                obj.AccountHash = user.FindFirstValue(ClaimTypes.Name);
                await userInfoService.InsertUserInfoAsync(obj);


                navigationManager.NavigateTo("counter", true);
            }
            void Cancel()
            {
                navigationManager.NavigateTo("counter", true);
            }
        }

    </Authorized>
    <NotAuthorized>
        <p>Please login first</p>
    </NotAuthorized>
</AuthorizeView>

